var SELECTORS = {
	ARCHIVE       : {
		FILTER        : '[data-role="archive-filter"]',
		CANCEL        : '[data-role="cancel-filter"]'
	},
	COLLAPSE      : '[data-toggle="collapse"]',
	DATATRIGGER   : {
		PARENT	      : '[data-trigger="parent"]'
	},
	DECISION			: {
		CONTENT 		  : '[data-role="decision-content"]',
		DETAILS 		  : '[data-role="decision-details"]'
	},
	DROPDOWN      : '[data-toggle="dropdown"]',
	ICON          : 'span[class*="icon-"]',
	MODALIMAGE    : 'img[data-toggle="modal"]',
	ONLINE        : {
		COURSE        : {
			COMPARE       : '#compare',
			DETAILS       : '[data-course-code]',
			ELLIPSIS      : '[data-toggle="ellipsis"]',
			NAME          : 'td[class*="course-"],th.course-name',
			LIST          : '#course-list',
			PREFIX        : 'comp-',
			SELECT        : '.course-select>span[class*=icon-]'
		},
		REGISTRATION  : '[data-listen="registration"]',
		SEARCH        : '[data-search="courses"]'
	},
	PAGINATION    : '[data-page-target]',
	RSS           : {
		EVENT         : '[data-date]',
		MORE          : '[data-target="rss-events"]',
		INPUT         : 'input[data-role="rss-filter"]',
		FILTER        : '[data-role="rss-filter"]:not(input)'
	},
	STICKY        : {
		TOP           : '[data-stick="top"]'
	},
	TABNAV        : {
		ACTIVE        : '[data-toggle="tab"].active',
		TRIGGER       : '[data-toggle="tab"]'
	},
	TOP           : '[data-role="scroll-top"]',
	WRAP          : 'span[class*="icon-wrapper"]'
};
var ATTRIBUTES = {
	ARIA           : {
		EXPANDED       : 'aria-expanded',
		SELECTED       : 'aria-selected'
	},
	DATA           : {
		PARENT         : 'data-parent',
		TARGET         : 'data-target'
	},
	COURSE         : {
		COMPARED       : 'data-compared'
	}
}
var BOOL = {
	FALSE    : 'false',
	TRUE     : 'true'
}
var CLASSES = {
	ACTIVE      : 'active',
	ELLIPSIS    : 'course-ellipsis',
	STICK       : 'stick'
};
var EVENTS = {
	COLLAPSE   : {
		EXPANDED   : 'collapse-expanded',
		CLOSED     : 'collapse-closed'
	},
	CLICK      : 'click',
	CHANGE     : 'change',
	KEYUP      : 'keyup',
	SCROLL     : 'scroll'
};
var ICONS = {
	ANGLE     : {
		DOWN      : 'icon-angle-down',
		UP      	: 'icon-angle-up',
	},
	MINUS     : 'icon-minus',
	PLUS      : 'icon-plus',
	TRIANGLE  : {
		DOWN      : 'icon-triangle-down',
		UP        : 'icon-triangle-up',
	},
};
var EVENTS_PER_PAGE = 10;

function newEvent( eventType ) { return new CustomEvent( eventType ) };

/// BACK TO TOP
function backToTop() { window.scroll( { top: 0, left: 0, behavior: 'smooth' } ) };

/// COLLAPSE
function expand( elmt ) {
	if ( ! elmt.isExpanded() ) {
		var target = elmt.getAttribute( ATTRIBUTES.DATA.TARGET );
		elmt.setAttribute( ATTRIBUTES.ARIA.EXPANDED, BOOL.TRUE );
		document.getElementById( target ).show();
		elmt.focus();
		if ( elmt.matches( SELECTORS.COLLAPSE ) ) {
			elmt.dispatchEvent( newEvent( EVENTS.COLLAPSE.EXPANDED ) )
		}
	}
};
function close( elmt ) {
	if ( elmt.isExpanded() ) {
		var target = elmt.getAttribute( ATTRIBUTES.DATA.TARGET );
		elmt.setAttribute( ATTRIBUTES.ARIA.EXPANDED, BOOL.FALSE );
		document.getElementById( target ).hide();
		if ( elmt.matches( SELECTORS.COLLAPSE ) ) {
			elmt.dispatchEvent( newEvent( EVENTS.COLLAPSE.CLOSED ) )
		}
	}
};
function toggleCollapse( elmt ) {
	var closeOnly = elmt.isExpanded();
	var collapseTabs = document.getElementById( elmt.getAttribute( ATTRIBUTES.DATA.PARENT ) ).querySelectorAll( SELECTORS.COLLAPSE );
	for ( var i = 0; i < collapseTabs.length; i ++ ) {
		close( collapseTabs[i] );
	}
	if ( ! closeOnly ) {
		expand( elmt );
	}
};

/// DROPDOWN
function toggleDropdown( elmt ) {
	if ( elmt.isExpanded() ) {
		close( elmt );
	}
	else {
		expand( elmt );
	}
}

/// SUB NAVIGATION
function toggleSidenavIcon( elmt ) {
	elmt.toggleClass( ICONS.TRIANGLE.DOWN );
	elmt.toggleClass( ICONS.TRIANGLE.UP )
};
var sidenavToggles = document.querySelectorAll( '[data-role="sidenav-toggle"]' );
for ( var i = 0; i < sidenavToggles.length; i ++ ) {
	sidenavToggles[i].addEventListener( EVENTS.COLLAPSE.CLOSED, function( event ) {
		var trigger = event.currentTarget;
		if ( trigger.isEnabled() ) {
			toggleSidenavIcon( trigger );
		}
	} );
	sidenavToggles[i].addEventListener( EVENTS.COLLAPSE.EXPANDED, function( event ) {
		var trigger = event.currentTarget;
		if ( trigger.isEnabled() ) {
			toggleSidenavIcon( trigger );
		}
	} );
}

/// ACCORDION
function toggleAccordionTab( elmt ) {
	var icon = elmt.querySelector( '.accordion-icon' );
	var tab = elmt.parentNode.parentNode;
	icon.toggleClass( ICONS.PLUS );
	icon.toggleClass( ICONS.MINUS );
	tab.toggleClass( CLASSES.ACTIVE );
};
var accordionTabs = document.querySelectorAll( '[data-role="accordion-tab"]' );
for ( var i = 0; i < accordionTabs.length; i ++ ) {
	accordionTabs[i].addEventListener( EVENTS.COLLAPSE.CLOSED, function( event ) {
		var trigger = event.currentTarget;
		var icon = trigger.querySelector( '.accordion-icon' );
		if ( trigger.isEnabled() ) {
			toggleAccordionTab( trigger );
		}
	} );
	accordionTabs[i].addEventListener( EVENTS.COLLAPSE.EXPANDED, function( event ) {
		var trigger = event.currentTarget;
		var icon = trigger.querySelector( '.accordion-icon' );
		if ( trigger.isEnabled() ) {
			toggleAccordionTab( trigger );
		}
	} );
}

/// RSS EVENTS CALENDAR
function hideEvents( target ) {
	var rssEvents = document.getElementById( target ).querySelectorAll( SELECTORS.RSS.EVENT );
	for ( var i = 0; i < rssEvents.length; i ++ ) {
		rssEvents[i].hide();
	}
};
function displayEvents( target, numEvents ) {
	numEvents = numEvents === undefined ? EVENTS_PER_PAGE : numEvents;
	hideEvents( target );
	var parent = document.getElementById( target );
	var rssEvents = parent.querySelectorAll( SELECTORS.RSS.EVENT )
	var eventCount = rssEvents.length;
	var moreButton = parent.querySelector( SELECTORS.RSS.MORE );
	var eventsShown = 0;
	for ( var i = 0; i < rssEvents.length; i ++ ) {
		if ( eventsShown < numEvents ){
			eventsShown ++;
			rssEvents[i].show();
		}
	}
	if ( eventCount > numEvents ) {
		moreButton.show()
	}
	else {
		moreButton.hide();
	}
};
function filterEvents( target ) {
	var parent = document.getElementById( target );
	var messageContainer = parent.querySelector( '[data-role="rss-message"]' );
	var input = parent.querySelector( SELECTORS.RSS.INPUT );
	var events = parent.querySelectorAll( SELECTORS.RSS.EVENT );
	var moreButton = parent.querySelector( SELECTORS.RSS.MORE );
	ShowMoreHits[target] = 0;
	messageContainer.hide();
	var dateFilter = input.value;
	if ( dateFilter ) {
		for ( var i = 0; i < events.length; i ++ ) {
			events[i].hide()
		}
		visibleEventsCount = 0;
		for ( var i = 0; i < events.length; i ++ ) {
			var articleDate = events[i].getAttribute( 'data-date' );
			if ( dateFilter === articleDate ) {
				events[i].show();
				visibleEventsCount ++;
			}
		}
		if ( visibleEventsCount === 0 ) {
			messageContainer.innerHTML = 'No items to be displayed at the selected date';
			messageContainer.show();
		}
		moreButton.hide();
	}
	else {
		displayEvents( target )
	}
};
var ShowMoreHits = [];
var rssInputs = document.querySelectorAll( SELECTORS.RSS.INPUT );
for ( var i = 0; i < rssInputs.length; i ++ ) {
	rssInputs[i].addEventListener( EVENTS.CHANGE, function( event ) {
		var trigger = event.currentTarget;
		if ( trigger.isEnabled() ) {
			var parent = trigger.getAttribute( ATTRIBUTES.DATA.PARENT );
			document.getElementById( parent ).querySelector( SELECTORS.RSS.FILTER ).click();
		}
	} );
}

/// PAGINATION
function setTargetPage(targetPage, currentPage, numPages, links) {
	var targetPageNumber = parseInt( targetPage );
	links.active.removeClass( CLASSES.ACTIVE );
	if ( targetPage === 'First' ) {
		targetPageNumber = 1;
		links.previous.nextElementSibling.addClass( CLASSES.ACTIVE );
	}
	else if ( targetPage === 'Last' ) {
		targetPageNumber = numPages;
		links.next.previousElementSibling.addClass( CLASSES.ACTIVE );
	}
	else if ( targetPage === 'Next' ) {
		targetPageNumber = currentPage + 1;
		links.active.nextElementSibling.addClass( CLASSES.ACTIVE );
	}
	else if ( targetPage === 'Previous' ) {
		targetPageNumber = currentPage - 1;
		links.active.previousElementSibling.addClass( CLASSES.ACTIVE );
	}
	else {
		links.trigger.addClass( CLASSES.ACTIVE );
	}
	return targetPageNumber;
};
function displayPagination(parent, targetPage, numPages, links) {
	var paginationTriggers = parent.querySelectorAll( SELECTORS.PAGINATION );
	for ( var i = 0; i < paginationTriggers.length; i ++ ) {
		paginationTriggers[i].show();
		paginationTriggers[i].enable();
		var linkTarget = parseInt( paginationTriggers[i].getAttribute( 'data-page-target' ) );
		if ( linkTarget !== NaN ) {
			if ( linkTarget < targetPage - 2 ){
				paginationTriggers[i].hide();
			}
			else if ( linkTarget > targetPage + 2 ) {
				paginationTriggers[i].hide()
			}
		}
	}
	if ( targetPage <= 1 ) {
		links.previous.disable();
		links.first.disable();
	}
	if ( targetPage >= numPages ) {
		links.last.disable();
		links.next.disable();
	}
};
function displayPage(parent, targetPage) {
	var dataPageTriggers = parent.querySelectorAll('[data-page]' );
	for ( var i = 0; i < dataPageTriggers.length; i ++ ) {
		dataPageTriggers[i].hide();
	}
	var childrenPageTriggers = parent.querySelectorAll('[data-page="' + targetPage + '"]' );
	for ( var i = 0; i < childrenPageTriggers.length; i ++ ) {
		childrenPageTriggers[i].show();
	}
};

/// ONLINE
function registrationTrack() {
	var s = s_gi( s_account );
	s.linkTrackVars = 'events';
	s.linkTrackEvents = 'event21';
	s.events = 'event21';
	s.tl( this,'o','Register Now' );
}
function showEllipsis( elmt ) {
	elmt.addClass( CLASSES.ELLIPSIS );
	elmt.nextElementSibling.show();
	elmt.nextElementSibling.nextElementSibling.show();
}
function hideEllipsis( elmt ) {
	elmt.removeClass( CLASSES.ELLIPSIS );
	elmt.nextElementSibling.hide();
	elmt.nextElementSibling.nextElementSibling.hide();
}
function calcEllipsis( elmt ) {
	var ellipsis = elmt.querySelector( '.course-description :first-child' );
	console.log( 'elmt height: ' + ellipsis.clientHeight );
	if ( ellipsis.clientHeight > 45 ) {
		showEllipsis( ellipsis );
	}
	else {
		hideEllipsis( ellipsis );
	}
}
function compareCourse( elmt ) {
	console.log( 'compare' );
	if ( elmt.getAttribute( ATTRIBUTES.COURSE.COMPARED ) === BOOL.FALSE ) {
		elmt.setAttribute( ATTRIBUTES.COURSE.COMPARED, BOOL.TRUE);
		elmt.setAttribute( ATTRIBUTES.ARIA.SELECTED, BOOL.TRUE);
		var icon = elmt.querySelector( SELECTORS.ONLINE.COURSE.SELECT );
		icon.toggleClass( ICONS.PLUS );
		icon.toggleClass( ICONS.MINUS );

		var temp = elmt.cloneNode( true );
		var tempID = SELECTORS.ONLINE.COURSE.PREFIX + temp.getAttribute( 'id' );

		temp.setAttribute( 'id', tempID );
		temp.querySelector( '.course-credits' ).innerHTML += ' credits';

		document.querySelector( SELECTORS.ONLINE.COURSE.COMPARE + ' > tbody' ).appendChild( temp );
		calcEllipsis( document.getElementById( tempID ) );
	}
	else {
		if ( elmt.matches( '[id*="comp-"]' ) ) {
			var tempID = elmt.getAttribute( 'id' ).slice( 5 );

			var temp = document.getElementById( tempID );
			temp.setAttribute( ATTRIBUTES.COURSE.COMPARED, BOOL.FALSE);
			temp.setAttribute( ATTRIBUTES.ARIA.SELECTED, BOOL.FALSE);
			var icon = temp.querySelector( SELECTORS.ONLINE.COURSE.SELECT );
			icon.toggleClass( ICONS.PLUS );
			icon.toggleClass( ICONS.MINUS );

			elmt.remove();
		}
		else {
			elmt.setAttribute( ATTRIBUTES.COURSE.COMPARED, BOOL.FALSE);
			elmt.setAttribute( ATTRIBUTES.ARIA.SELECTED, BOOL.FALSE);
			var icon = elmt.querySelector( SELECTORS.ONLINE.COURSE.SELECT );
			icon.toggleClass( ICONS.PLUS );
			icon.toggleClass( ICONS.MINUS );

			var tempID = SELECTORS.ONLINE.COURSE.PREFIX + elmt.getAttribute( 'id' );
			document.getElementById( tempID ).remove();
		}
	}
}
function toggleEllipsis( elmt ) {
	elmt.innerHTML = elmt.innerHTML === 'Read More' ? 'Read Less' : 'Read More';
	elmt.previousElementSibling.toggleClass( 'hidden' );
	elmt.previousElementSibling.previousElementSibling.toggleClass( CLASSES.ELLIPSIS );
}
function camelize( str ) {
	return str.replace( /(?:^\w|[A-Z]|\b\w|\s+)/g, function( match, index ) {
		if ( +match === 0 ) return ""; // or if (/\s+/.test(match)) for white spaces
		return index == 0 ? match.toLowerCase() : match.toUpperCase();
	} );
}
function searchCourses() {
	var courseTable = document.querySelector( '.course-table' );
	console.log( courseTable );
	if ( courseTable !== null ) {
		var colleges = courseTable.querySelectorAll( '.college' );
		var departments = courseTable.querySelectorAll( '.department' );
		var courses = courseTable.querySelectorAll( SELECTORS.ONLINE.COURSE.DETAILS );
		if ( colleges.length >= 1 ) {
			for ( var i = 0; i < colleges.length; i ++ ) {
				colleges[i].hide();
			}
		}
		if ( departments.length >= 1 ) {
			for ( var i = 0; i < departments.length; i ++ ) {
				departments[i].show();
			}
		}
		if ( courses.length >= 1 ) {
			for ( var i = 0; i < courses.length; i ++ ) {
				courses[i].show();
			}
		}

		var input_srch = document.getElementById( 'search-course' );
		var srch = input_srch !== null ? input_srch.value.toLowerCase() : '';
		var input_dept = document.getElementById( 'search-department' );
		var dept = input_dept !== null ? input_dept.value : 'n/a';
		var input_cred = document.getElementById( 'search-credits' );
		var cred = input_cred !== null ? input_cred.value : 'n/a';
		var input_disp = document.getElementById( 'search-availability' );
		var disp = input_disp !== null ? input_disp.value.toLowerCase() : 'n/a';
		var input_code = document.getElementById( 'search-code' );
		var code = input_code !== null ? camelize( input_code.value ).toLowerCase() : 'n/a';
		var input_coll = document.getElementById( 'search-college' );
		var coll = input_coll !== null ? input_coll.value : 'n/a';

		return function( coll, dept, cred, disp, code, srch, colleges, courses ) {
			console.log( 'coll: ' + coll + ', dept: ' + dept + ', cred: ' + cred + ', disp: ' + disp + ', code: ' + code + ', search: ' + srch );
			console.log( '# college: ' + colleges.length + ', # courses: ' + courses.length );
			// college
			if ( coll != "n/a" ) {
				document.getElementById( coll ).show();
			}
			else {
				if ( colleges.length >= 1 ) {
					for ( var i = 0; i < colleges.length; i ++ ) {
						colleges[i].show();
					}
				}
			}
			if ( courses.length >= 1 ) {
				for ( var i = 0; i < courses.length; i ++ ) {
					// credits
					if ( cred != 'n/a' ) {
						var credit = courses[i].querySelector( '.course-credits' );
						if ( credit !== null ) {
							if ( credit.textContent != cred ) {
								courses[i].hide();
							}
						}
					}
					// availability
					if ( disp != 'n/a' ) {
						var query = '[data-disp*="' + disp + '"]';
						var offered = false;
						var dispElmt = courses[i].querySelector( query );
						if ( dispElmt !== null ) {
							offered = true;
						}
						if ( ! offered ) {
							courses[i].hide();
						}
					}
					// course code
					if ( code != 'n/a' ) {
						var patt = new RegExp( code );
						if ( ! patt.test( courses[i].getAttribute( 'data-course-code' ).toLowerCase() ) ) {
							courses[i].hide();
						}
					}
					// department
					if ( dept != 'n/a' ) {
						if ( courses[i].getAttribute( 'data-dept' ) != dept ) {
							courses[i].hide();
						}
					}
					// general field
					if ( srch != '' ) {
						var patt = new RegExp( srch );
						if ( ! patt.test( courses[i].innerHTML.toLowerCase() ) ) {
							courses[i].hide();
						}
					}
				}
			}
			return hideEmptyDepts();
		} ( coll, dept, cred, disp, code, srch, colleges, courses );
	}
}
function hideEmptyDepts() {
	var departments = document.querySelectorAll( '.department' );
	if ( departments.length >= 1 ) {
		for ( var i = 0; i < departments.length; i ++ ) {
			var visibleCourses = departments[i].querySelectorAll( SELECTORS.ONLINE.COURSE.DETAILS + ':not(.hidden)' );
			if ( visibleCourses.length < 1 ) {
				departments[i].hide();
			}
		}
	}
}

/// TAB NAVIGATION
function openTab( elmt ) {
	if ( ! elmt.isExpanded() ) {
		var target = document.getElementById( elmt.getAttribute( ATTRIBUTES.DATA.TARGET ) )
		target.show();
		target.setAttribute( ATTRIBUTES.ARIA.SELECTED, BOOL.TRUE );
		elmt.addClass( CLASSES.ACTIVE );
		elmt.setAttribute( ATTRIBUTES.ARIA.EXPANDED, BOOL.TRUE );
	}
}
function closeTab( elmt ) {
	if ( elmt.isExpanded() ) {
		var target = document.getElementById( elmt.getAttribute( ATTRIBUTES.DATA.TARGET ) );
		target.hide();
		target.setAttribute( ATTRIBUTES.ARIA.SELECTED, BOOL.FALSE );
		elmt.removeClass( CLASSES.ACTIVE );
		elmt.setAttribute( ATTRIBUTES.ARIA.EXPANDED, BOOL.FALSE );
	}
}
function toggleTab( elmt ) {
	if ( ! elmt.isExpanded() ) {
		var parent = document.getElementById( elmt.getAttribute( ATTRIBUTES.DATA.PARENT ) )
		var activeTab = parent.querySelector( SELECTORS.TABNAV.ACTIVE );
		console.log( activeTab );
		closeTab( activeTab );
		openTab( elmt );
	}
}

/// IMAGE MODAL
function activateModalImage( elmt ) {
	var target = document.getElementById( elmt.getAttribute( ATTRIBUTES.DATA.TARGET ) )
	var imgSrc = elmt.getAttribute( 'data-img-src' );
	var imgAlt = elmt.getAttribute( 'data-img-alt' );
	var modalTitle = elmt.getAttribute( 'data-modal-title' );
	var modalCaption = elmt.getAttribute( 'data-modal-caption' );
	var targetImg = target.querySelector( 'img' );
	var targetCaption = target.querySelector( '.modal-caption' );
	var targetTitle = document.getElementById( 'image-modal-label' );
	targetTitle.innerHTML = modalTitle;
	targetCaption.innerHTML = modalCaption;
	targetImg.setAttribute( 'src', imgSrc );
	targetImg.setAttribute( 'alt', imgAlt );
}

/// DECISION TRACKER 
function toggleDecisionContent( elmt ) {
	var closeText = elmt.firstElementChild;
	var detailsText = closeText.nextElementSibling;
	var icon = detailsText.nextElementSibling.firstElementChild;
	closeText.toggle();
	detailsText.toggle();
	icon.toggleClass( ICONS.ANGLE.DOWN );
	icon.toggleClass( ICONS.ANGLE.UP );
}
function toggleDecisionDetails( elmt ) {
	var parent = elmt.parentNode;
	var icons = parent.querySelectorAll( SELECTORS.ICON );
	for( var i = 0; i < icons.length; i++) {
		icons[i].hide();
	}
	var icon = elmt.querySelector( SELECTORS.ICON ).show();
}

/// EVENT HANDLING
function handleClick( event ) {
	var trigger = event.target;
	var triggerEnabled = trigger.isEnabled();
	console.log( trigger );
	if ( triggerEnabled ) {
		// if trigger is an icon, change it for its parent.
		while ( trigger.matches( SELECTORS.ICON ) || trigger.matches( SELECTORS.DATATRIGGER.PARENT ) ) {
			trigger = trigger.parentNode;
			console.log( trigger );
		}
		// back to top button.
		if ( trigger.matches( SELECTORS.TOP ) ) {
			event.preventDefault();
			backToTop();
		}
		// collapsible element.
		if ( trigger.matches( SELECTORS.COLLAPSE ) ) {
			event.preventDefault();
			toggleCollapse( trigger );
		}
		// dropdown menu.
		if ( trigger.matches( SELECTORS.DROPDOWN ) ) {
			event.preventDefault();
			toggleDropdown( trigger );
		}
		// rss event filter.
		if ( trigger.matches( SELECTORS.RSS.FILTER ) ) {
			event.preventDefault();
			filterEvents( trigger.getAttribute( ATTRIBUTES.DATA.PARENT ) );
		}
		// rss event more button.
		if ( trigger.matches( SELECTORS.RSS.MORE ) ) {
			event.preventDefault();
			var target = trigger.getAttribute( ATTRIBUTES.DATA.PARENT );
			if ( ShowMoreHits[target] !== ( undefined || null ) ) {
				ShowMoreHits[target] = 0
			}
			ShowMoreHits[target] ++;
			var displayCount = 10 * ( ShowMoreHits[target] + 1 );
			displayEvents( target, displayCount );
		}
		// pagination button.
		if ( trigger.matches( SELECTORS.PAGINATION ) ) {
			event.preventDefault();
			var parent = document.getElementById( trigger.getAttribute( ATTRIBUTES.DATA.PARENT ) );
			links = {
				active   : parent.querySelector( SELECTORS.PAGINATION + '.' + CLASSES.ACTIVE ),
				first: parent.querySelector( '[data-page-target="First"]' ),
				last: parent.querySelector( '[data-page-target="Last"]' ),
				next: parent.querySelector( '[data-page-target="Next"]' ),
				previous : parent.querySelector( '[data-page-target="Previous"]' ),
				trigger  : trigger
			};
			numPages = parent.querySelectorAll( SELECTORS.PAGINATION ).length - 4;
			console.log("num Pages: " + numPages);
			activePage = parseInt( links.active.getAttribute( 'data-page-target' ) );
			targetPage = trigger.getAttribute( 'data-page-target' );
			console.log("target: " + targetPage);
			targetPage = setTargetPage( targetPage, activePage, numPages, links );
			console.log("target parsed: " + targetPage);
			displayPagination( parent, targetPage, numPages, links );
			displayPage( parent, targetPage );
			bLazy.revalidate();
		}
		// news archive filter.
		if ( trigger.matches( SELECTORS.ARCHIVE.FILTER ) ) {
			event.preventDefault();
			var parent = document.getElementById( trigger.getAttribute( ATTRIBUTES.DATA.PARENT ) );
			var target = trigger.getAttribute( 'data-month' ) || trigger.getAttribute( 'data-category' );
			var newsItems = parent.querySelectorAll( '[data-month][data-category]' );
			for ( var i = 0; i < newsItems.length; i ++ ) {
				if ( newsItems[i].getAttribute( 'data-month' ) === target ) {
					newsItems[i].show();
				}
				else if ( newsItems[i].getAttribute( 'data-category' ).includes( target ) ) {
					newsItems[i].show();
				}
				else {
					newsItems[i].hide();
				}
			}
			var pageTriggers = parent.querySelectorAll( SELECTORS.PAGINATION );
			for ( var i = 0; i < pageTriggers.length; i ++ ) {
				pageTriggers[i].hide()
			}
			bLazy.revalidate();
		}
		// news archive cancel filter.
		if ( trigger.matches( SELECTORS.ARCHIVE.CANCEL ) ) {
			event.preventDefault();
			var parent = document.getElementById( trigger.getAttribute( ATTRIBUTES.DATA.PARENT ) );
			var firstPage = parent.querySelector( '[data-page-target="First"]' );
			firstPage.enable();
			firstPage.click();
			bLazy.revalidate();
		}
		// online course list registration button.
		if ( trigger.matches( SELECTORS.ONLINE.REGISTRATION ) ) {
			registrationTrack();
		}
		// online course list comparison.
		if ( trigger.matches( SELECTORS.ONLINE.COURSE.NAME ) ) {
			trigger = trigger.parentNode;
			console.log( trigger );
		}
		if ( trigger.matches( SELECTORS.ONLINE.COURSE.DETAILS ) ) {
			compareCourse( trigger );
		}
		// online course list expand details.
		if ( trigger.matches( SELECTORS.ONLINE.COURSE.ELLIPSIS ) ) {
			toggleEllipsis( trigger );
		}
		// academic deadlines semester tab.
		if ( trigger.matches( SELECTORS.TABNAV.TRIGGER ) ) {
			toggleTab( trigger );
		}
		// modal image.
		if ( trigger.matches( SELECTORS.MODALIMAGE ) ) {
			activateModalImage( trigger );
		}
		// decision tracker 
		if ( trigger.matches( SELECTORS.DECISION.CONTENT ) ) {
			toggleDecisionContent( trigger );
		}
		// decision tracker selectors
		if ( trigger.matches( SELECTORS.DECISION.DETAILS ) ) {
			toggleDecisionDetails( trigger );
		}
	}
}
function handleChange( event ) {
	var trigger = event.target;
	var triggerEnabled = trigger.isEnabled();
	console.log( trigger );
	if ( triggerEnabled ) {
		if ( trigger.matches( SELECTORS.ONLINE.SEARCH ) ) {
			searchCourses();
		}
	}
}
function handleScroll( event ) {
	var sticky = document.querySelector( SELECTORS.STICKY.TOP );
	if ( sticky !== null ) {
		var scroll = window.scrollY;
		var isSticked = document.body.hasClass( CLASSES.STICK );
		var stickyOffset = sticky.nextElementSibling.nextElementSibling.offsetTop;
		if ( scroll >= stickyOffset && ! isSticked ) {
			document.body.addClass( CLASSES.STICK );
			sticky.show();
		}
		if ( scroll <= stickyOffset && isSticked ) {
			document.body.removeClass( CLASSES.STICK );
			sticky.hide();
		}
	}
}

document.addEventListener( EVENTS.CLICK , handleClick  );
document.addEventListener( EVENTS.CHANGE, handleChange );
document.addEventListener( EVENTS.KEYUP , handleChange );
document.addEventListener( EVENTS.SCROLL, handleScroll );

/// INIT
( function() {
	searchCourses();
	hideEmptyDepts();
}() );